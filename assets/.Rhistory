scale = FALSE
), class = "prcomp")
}
# ==== PCoA Plot Function Using Metadata + autoplot ====
pcoa_with_metadata_autoplot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id  # attach sample_id assuming same order
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col)) %>%
select_if(~ sd(.) > 0)  # remove constant cols
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
# Compute Bray-Curtis distance
dist_mat <- vegdist(df_num, method = "bray")
# Run PCoA via classical MDS
pcoa <- cmdscale(dist_mat, eig = TRUE, k = 2)
# Wrap PCoA output into prcomp-like structure
fake_prcomp <- make_fake_prcomp(pcoa$points, pcoa$eig)
# Plot using autoplot
autoplot(
fake_prcomp,
data = df_group,
colour = "group",
frame = TRUE,
frame.type = "norm",
main = paste("PCoA -", method_name)
) +
theme_minimal()
}
# ==== Apply PCoA Plotting ====
plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_autoplot(df, name, metadata, group_col = "batchid")
})
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(ggfortify)
library(vegan)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== Function to simulate prcomp-like object for PCoA ====
make_fake_prcomp <- function(cmd, eig) {
structure(list(
x = as.data.frame(cmd),
sdev = sqrt(eig / sum(eig)),
rotation = NA,
center = FALSE,
scale = FALSE
), class = "prcomp")
}
# ==== PCoA Plot Function Using Metadata + autoplot ====
pcoa_with_metadata_autoplot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col)) %>%
select_if(~ sd(.) > 0)
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
# Compute Bray-Curtis distances
dist_mat <- vegdist(df_num, method = "bray")
# Run classical MDS (PCoA)
pcoa <- cmdscale(dist_mat, eig = TRUE, k = nrow(df_num) - 1)
# Safely wrap as a prcomp-compatible object
fake_prcomp <- make_fake_prcomp(pcoa$points, pcoa$eig)
# Plot
autoplot(
fake_prcomp,
data = df_group,
colour = "group",
frame = TRUE,
frame.type = "norm",
main = paste("PCoA -", method_name)
) +
theme_minimal()
}
# ==== Apply PCoA Plotting ====
plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_autoplot(df, name, metadata, group_col = "batchid")
})
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(ggfortify)
library(cluster)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCA Plot Function Using Metadata Grouping ====
pca_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id  # Add sample_id from metadata
# Merge with metadata
df_merged <- inner_join(df, metadata, by = "sample_id")
# Extract numeric columns excluding the grouping column
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
# Convert group column to factor
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
# Remove constant columns
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
# PCA
pca <- prcomp(df_num, scale. = TRUE)
# Plot with group as color
autoplot(
pca,
data = df_group,
colour = "group",
frame = TRUE,
frame.type = "norm",
main = paste("PCA -", method_name)
) +
theme_minimal()
}
# ==== Apply PCA Plotting with Metadata Coloring ====
plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pca_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Combine All Plots ====
combined_plot <- wrap_plots(plots, ncol = 2)
print(combined_plot)
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(cluster)
library(vegan)       # For vegdist
library(ggfortify)   # Optional, used in PCA
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCoA Plot Function Using Metadata Grouping ====
pcoa_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id  # Add sample_id from metadata
# Merge with metadata
df_merged <- inner_join(df, metadata, by = "sample_id")
# Extract numeric columns (features only)
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
# Remove constant columns
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
# Set rownames to sample IDs for distance matrix
rownames(df_num) <- df_merged$sample_id
# Compute Bray-Curtis distance
dist_mat <- vegdist(df_num, method = "bray")
# Run PCoA
pcoa_result <- cmdscale(dist_mat, k = 2, eig = TRUE)
pcoa_df <- as.data.frame(pcoa_result$points)
colnames(pcoa_df) <- c("PCoA1", "PCoA2")
pcoa_df$sample_id <- rownames(pcoa_df)
# Add group info
pcoa_df <- inner_join(pcoa_df, metadata, by = "sample_id")
pcoa_df$group <- as.factor(pcoa_df[[group_col]])
# Plot
ggplot(pcoa_df, aes(x = PCoA1, y = PCoA2, color = group)) +
geom_point(size = 2) +
stat_ellipse(aes(group = group), type = "norm", linetype = 2, alpha = 0.5) +
labs(title = paste("PCoA -", method_name), color = group_col) +
theme_minimal()
}
# ==== Apply PCoA Plotting with Metadata Coloring ====
plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Combine All Plots ====
combined_plot <- wrap_plots(plots, ncol = 2)
print(combined_plot)
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(ggfortify)
library(cluster)
library(vegan)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCA Function ====
pca_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
pca <- prcomp(df_num, scale. = TRUE)
autoplot(pca, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCA -", method_name)) +
theme_minimal()
}
# ==== PCoA Function using autoplot-compatible structure ====
pcoa_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
rownames(df_num) <- df_merged$sample_id
dist_mat <- vegdist(df_num, method = "bray")
pcoa_res <- cmdscale(dist_mat, k = 2, eig = TRUE)
points_df <- as.data.frame(pcoa_res$points)
colnames(points_df) <- c("PC1", "PC2")
# Create fake 'prcomp' object for autoplot
fake_prcomp <- list(
x = as.matrix(points_df),
sdev = sqrt(pcoa_res$eig[1:2]),
rotation = matrix(NA, ncol = 2, nrow = ncol(df_num)),
center = FALSE,
scale = FALSE
)
class(fake_prcomp) <- "prcomp"
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
autoplot(fake_prcomp, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCoA -", method_name)) +
theme_minimal()
}
# ==== Generate PCA and PCoA Plots for Each Method ====
pca_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pca_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
pcoa_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(ggfortify)
library(cluster)
library(vegan)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCA Function ====
pca_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
pca <- prcomp(df_num, scale. = TRUE)
autoplot(pca, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCA -", method_name)) +
theme_minimal()
}
# ==== PCoA Function using autoplot-compatible structure ====
pcoa_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
rownames(df_num) <- df_merged$sample_id
dist_mat <- vegdist(df_num, method = "bray")
pcoa_res <- cmdscale(dist_mat, k = 2, eig = TRUE)
points_df <- as.data.frame(pcoa_res$points)
colnames(points_df) <- c("PC1", "PC2")
# Create fake 'prcomp' object for autoplot
fake_prcomp <- list(
x = as.matrix(points_df),
sdev = sqrt(pcoa_res$eig[1:2]),
rotation = matrix(NA, ncol = 2, nrow = ncol(df_num)),
center = FALSE,
scale = FALSE
)
class(fake_prcomp) <- "prcomp"
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
autoplot(fake_prcomp, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCoA -", method_name)) +
theme_minimal()
}
# ==== Generate PCA and PCoA Plots for Each Method ====
pca_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pca_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
pcoa_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(ggfortify)
library(cluster)
library(vegan)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCA Function ====
pca_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
pca <- prcomp(df_num, scale. = TRUE)
autoplot(pca, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCA -", method_name)) +
theme_minimal()
}
# ==== PCoA Function using autoplot-compatible structure ====
pcoa_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
rownames(df_num) <- df_merged$sample_id
dist_mat <- vegdist(df_num, method = "bray")
pcoa_res <- cmdscale(dist_mat, k = 2, eig = TRUE)
points_df <- as.data.frame(pcoa_res$points)
colnames(points_df) <- c("PC1", "PC2")
# Build fake prcomp object
fake_prcomp <- list(
x = as.matrix(points_df),
sdev = sqrt(abs(pcoa_res$eig[1:2])),  # sqrt of eigenvalues (make sure non-negative)
center = FALSE,
scale = FALSE,
rotation = matrix(0, nrow = ncol(df_num), ncol = 2)
)
rownames(fake_prcomp$rotation) <- colnames(df_num)
colnames(fake_prcomp$rotation) <- c("PC1", "PC2")
class(fake_prcomp) <- "prcomp"
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
autoplot(fake_prcomp, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCoA -", method_name)) +
theme_minimal()
}
# ==== Generate PCA and PCoA Plots for Each Method ====
pca_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pca_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
pcoa_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Combine and Display ====
combined_pca <- wrap_plots(pca_plots, ncol = 2)
combined_pcoa <- wrap_plots(pcoa_plots, ncol = 2)
# Show side by side if desired, or one below the other
final_plot <- combined_pca / combined_pcoa
print(final_plot)
# ==== Load Required Libraries ====
library(ggplot2)
library(patchwork)
library(readr)
library(dplyr)
library(vegan)
library(ggfortify)
# ==== Read Metadata ====
metadata <- read_csv("metadata.csv")
metadata$sample_id <- as.character(metadata$sample_id)
# ==== File Paths ====
file_list <- list(
Raw = "raw.csv",
ALRA = "normalized_alra.csv",
ComBat = "normalized_combat.csv",
ConQuR = "normalized_conqur.csv",
FSQN = "normalized_fsqn.csv",
PLSDA = "normalized_plsda.csv"
)
# ==== PCoA Plot Function Using autoplot-compatible Structure ====
pcoa_with_metadata_plot <- function(df, method_name, metadata, group_col = "batchid") {
df$sample_id <- metadata$sample_id
df_merged <- inner_join(df, metadata, by = "sample_id")
# Extract numeric data and clean constant columns
df_num <- df_merged %>%
select(where(is.numeric)) %>%
select(-any_of(group_col))
df_num <- df_num[, apply(df_num, 2, function(x) sd(x) > 0), drop = FALSE]
rownames(df_num) <- df_merged$sample_id
# Compute Bray-Curtis distance and perform PCoA
dist_mat <- vegdist(df_num, method = "bray")
pcoa_res <- cmdscale(dist_mat, k = 2, eig = TRUE)
points_df <- as.data.frame(pcoa_res$points)
colnames(points_df) <- c("PC1", "PC2")
# Create a fake 'prcomp' object to use with autoplot
fake_prcomp <- list(
x = as.matrix(points_df),
sdev = sqrt(abs(pcoa_res$eig[1:2])),
center = FALSE,
scale = FALSE,
rotation = matrix(0, nrow = ncol(df_num), ncol = 2)
)
rownames(fake_prcomp$rotation) <- colnames(df_num)
colnames(fake_prcomp$rotation) <- c("PC1", "PC2")
class(fake_prcomp) <- "prcomp"
# Add grouping info
df_group <- df_merged %>%
mutate(group = as.factor(!!sym(group_col))) %>%
select(group)
# Plot
autoplot(fake_prcomp, data = df_group, colour = "group", frame = TRUE, frame.type = "norm",
main = paste("PCoA -", method_name)) +
theme_minimal()
}
# ==== Generate PCoA Plots for Each Dataset ====
pcoa_plots <- lapply(names(file_list), function(name) {
df <- read_csv(file_list[[name]])
pcoa_with_metadata_plot(df, name, metadata, group_col = "batchid")
})
# ==== Combine and Display All PCoA Plots ====
combined_pcoa <- wrap_plots(pcoa_plots, ncol = 2)
print(combined_pcoa)
install.packages("D:\Downloads\curatedMetagenomicData_3.16.1.tar.gz", repos = NULL, type = "source")
install.packages("D:\Downloads\curatedMetagenomicData_3.16.1.tar.gz", repos = NULL, type = "source")
install.packages("D:/Downloads/curatedMetagenomicData_3.16.1.tar.gz", repos = NULL, type = "source")
library(curatedMetagenomicData)
setwd("D:/Downloads/Norm-Methods-Comparison")
source("real_data_obtain.R")
setwd("D:/Downloads/Norm-Methods-Comparison")
setwd("D:/Downloads/Norm-Methods-Comparison")
source("real_data_obtain.R")
